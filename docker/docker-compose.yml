version: "3.6"

services:

  java_spring_app:
    image: java_spring_app
    container_name: java_spring_app
    hostname: java_spring_app
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
      OTEL_SERVICE_NAME: "client-service"
      OTEL_TRACES_EXPORTER: "jaeger,zipkin"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
      OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
      OTEL_LOGS_EXPORTER: "logging"
    ports:
      - "9292:9292"
    depends_on:
      - jaeger
      - postgres
      - zipkin
    networks:
      - network_app

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "14250"
    networks:
      - network_app

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    networks:
      - network_app

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - java_spring_app
    networks:
      - network_app

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - './grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml'
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - network_app

  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: client_db
      PGDATA: /var/lib/postgresql/data/pg_data
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
      - './postgres/:/docker-entrypoint-initdb.d/'
    networks:
      - network_app

networks:
  network_app:
    name: network_app

volumes:
  postgres_data:
    name: postgres_data