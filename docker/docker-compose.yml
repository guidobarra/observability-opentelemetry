version: "3.6"

services:

  java_spring_app:
    image: java_spring_app
    container_name: java_spring_app
    hostname: java_spring_app
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    environment:
      OTEL_SERVICE_NAME: "client-service"
      OTEL_RESOURCE_ATTRIBUTES: "service=client-service,env=beta"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      # Logs are disabled by default
      OTEL_LOGS_EXPORTER: "otlp"
    ports:
      - "9292:9292"
    depends_on:
      - postgres
      - collector
    networks:
      - network_app

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.55
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "4317"
    networks:
      - network_app

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:3
    restart: always
    ports:
      - "9411:9411"
    networks:
      - network_app

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.50.1
    volumes:
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector
    networks:
      - network_app

  grafana:
    container_name: grafana
    image: grafana/grafana:10.0.12
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=GUBA
    volumes:
      - './grafana/dashboards/:/var/lib/grafana/dashboards/'
      - './grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml'
      - './grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml'
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - jaeger
      - zipkin
      - tempo
      - loki
    networks:
      - network_app

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.96.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "4317" # OTLP gRPC receiver
      - "8889" # Prometheus exporter metrics
    depends_on:
      - loki
      - jaeger
      - tempo
      - zipkin
    networks:
      - network_app

  loki:
    container_name: loki
    image: grafana/loki:latest #main-0a90f05
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"
    networks:
      - network_app

  tempo:
    container_name: tempo
    image: grafana/tempo:latest #main-4a8fc73
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yml
    restart: always
    ports:
      - "4317"  # otlp grpc
      - "3200"  # tempo as grafana datasource
    networks:
      - network_app

  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: client_db
      PGDATA: /var/lib/postgresql/data/pg_data
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
      - './postgres/:/docker-entrypoint-initdb.d/'
    networks:
      - network_app

networks:
  network_app:
    name: network_app

volumes:
  postgres_data:
    name: postgres_data